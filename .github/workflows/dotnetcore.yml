name: eShopOnWeb Build and Test

on: [push, pull_request, workflow_dispatch]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: '8.0.x'
#         include-prerelease: true

#     - name: Build with dotnet
#       run: dotnet build ./eShopOnWeb.sln --configuration Release
    
#     - name: Test with dotnet
#       run: dotnet test ./eShopOnWeb.sln --configuration Release

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2

#     - name: Setup .NET
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: '8.0.x'

#     - name: Publish the application
#       run: dotnet publish ./eShopOnWeb.sln --configuration Release --output ./publish

#     - name: Compress published output
#       run: zip -r publish.zip ./publish

#     - name: Copy artifact to EC2 via WinRM
#       uses: gsoft-inc/psrp@v1.0.1
#       with:
#         host: ${{ secrets.EC2_HOST }}
#         username: ${{ secrets.EC2_USERNAME }}
#         password: ${{ secrets.EC2_PASSWORD }}
#         port: 5986
#         script: |
#           Expand-Archive -Path C:\Temp\publish.zip -DestinationPath 'C:\inetpub\wwwroot' -Force
#           Write-Output "Deployment Complete"
#       env:
#         INPUT_FILE: ./publish.zip

# jobs:
#   build-and-deploy:
#     runs-on: self-hosted

#     steps:
#     - uses: actions/checkout@v2

#     - name: Setup .NET
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: '8.0.x'

#     - name: Publish the application
#       run: dotnet publish ./src/Web/Web.csproj --configuration Release --output ./publish

#     - name: Create zip archive
#       run: zip -r publish.zip ./publish

#     - name: Upload to EC2 via SCP
#       uses: appleboy/scp-action@v0.1.3
#       with:
#         host: ${{ secrets.EC2_HOST }}
#         username: ${{ secrets.EC2_USERNAME }}
#         key: ${{ secrets.EC2_SSH_KEY }}
#         port: 22
#         source: "publish.zip"
#         target: "C:/Temp"

#     - name: Deploy via SSH
#       uses: appleboy/ssh-action@v1.0.0
#       with:
#         host: ${{ secrets.EC2_HOST }}
#         username: ${{ secrets.EC2_USERNAME }}
#         key: ${{ secrets.EC2_SSH_KEY }}
#         port: 22
#         script: |
#           Stop-WebAppPool -Name "DefaultAppPool"
#           Remove-Item -Recurse -Force "C:\inetpub\wwwroot\*"
#           Expand-Archive -Path "C:\Temp\publish.zip" -DestinationPath "C:\inetpub\wwwroot"
#           Start-WebAppPool -Name "DefaultAppPool"


jobs:
  build-and-deploy:
    runs-on: self-hosted  # Ensure this matches your Windows runner's label
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore dependencies
        run: dotnet restore ./eShopOnWeb.sln

      - name: Build solution
        run: dotnet build ./eShopOnWeb.sln --configuration Release --no-restore

      - name: Publish Web project
        run: dotnet publish ./src/Web/Web.csproj --configuration Release --output published-app

      - name: Stop IIS site
        run: |
          # Run with elevated permissions
          Start-Process powershell -Verb RunAs -ArgumentList @"
            Import-Module WebAdministration
            Stop-Website -Name "Default Web Site" -ErrorAction SilentlyContinue
          "@
        shell: powershell
        
      # - name: Copy files to IIS directory
      #   run: |
      #     $source = "$(pwd)\published-app"
      #     $destination = "${env:SystemDrive}\inetpub\wwwroot"
      #     Remove-Item "$destination\*" -Recurse -Force -ErrorAction SilentlyContinue
      #     Copy-Item "$source\*" "$destination" -Recurse
      #   shell: powershell
        
      - name: Copy files to IIS directory
        run: |
            $source = "$(pwd)\published-app"
            $destination = "C:\inetpub\wwwroot"
            
            # Run with elevated permissions using Start-Process
            Start-Process powershell -Verb RunAs -ArgumentList "-Command `"
              # Clear destination directory first
              if (Test-Path '$destination') {
                Remove-Item '$destination\*' -Recurse -Force -ErrorAction SilentlyContinue
              }
              
              # Copy files with explicit Admin rights
              Copy-Item '$source\*' '$destination' -Recurse -Force
            `"" -Wait
        shell: powershell

      - name: Start IIS site
        run: |
          # Run with elevated permissions
          Start-Process powershell -Verb RunAs -ArgumentList @"
            Import-Module WebAdministration
            Start-Website -Name "Default Web Site"
          "@
        shell: powershell
